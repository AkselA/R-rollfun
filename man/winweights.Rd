% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/winweights.R
\name{winweights}
\alias{winweights}
\title{Discrete windows}
\usage{
winweights(width = 11, type = "epanechnikov", a = 3, step.adj = TRUE,
  lev.adj = "sum")
}
\arguments{
\item{width}{integer; width of the window}

\item{type}{charachter; name of the window function \cr
\tabular{ll}{
one of: \tab \cr
\code{ • square, rectangle, boxcar:} \tab Regular flat window \cr
\code{ • triangle, triangular:} \tab Isosceles (symmetric) triangular window \cr
\code{ • epanechnikov, welch, parabolic:} \tab Negative parabola \cr
\code{ • quartic, biweight:} \tab ... \cr
\code{ • triweight:} \tab ... \cr
\code{ • tricube:} \tab ... \cr
\code{ • cosine-smooth, cosine:} \tab ... \cr
\code{ • optcosine, sine:} \tab ... \cr
\code{ • hann:} \tab ... \cr
\code{ • hamming:} \tab ... \cr
\code{ • blackman:} \tab ... \cr
\code{ • nuttall:} \tab ... \cr
\code{ • blackman-nuttall:} \tab ... \cr
\code{ • blackman-harris:} \tab ... \cr
\code{ • flat-top:} \tab ... \cr
\code{ • blackman-harris:} \tab ... \cr
\code{ • kaiser-bessel, kaiser:} \tab ... \cr
\code{ • lanczos:} \tab ... \cr
\code{ • sinc:} \tab ... \cr
\code{ • poisson:} \tab ... \cr
\code{ • hann-poisson:} \tab ... \cr
}}

\item{step.adj}{logical; should the end points be a small step above zero?}

\item{lev.adj}{character; how the levels should be scaled}
}
\description{
Generate coefficients for various popular window functions
}
\details{

}
\examples{
# Time and frequency plots for each window 
name <- c("square", "triangle", "epanechnikov", "biweight", "triweight",
          "tricube", "cosine-smooth", "optcosine",
          "hann", "hamming", "blackman", "nuttall", "blackman-nuttall",
          "blackman-harris", "flat-top", "kaiser-bessel",
          "lanczos", "sinc", "poisson", "hann-poisson")

w <- 99
par(mfcol=c(5, 4), mar=c(1.5, 1.5, 0.5, 0.5), mgp=c(0, 0.6, 0), oma=c(0.1, 0.1, 0.1, 0.1))
for (i in name) {
    plot(winweights(w, type=i, a=3), type="l", xlab="", ylab="", ylim=c(-0.02, 0.06))
    grid(col="#00000022", lty=1)
    legend("topright", legend=i, bty="n", text.col="blue", adj=c(0.2, 0))
}

set.seed(1)
w <- 99
x <- rnorm(5e4)
i <- 1
par(mfcol=c(5, 4), mar=c(1.5, 1.5, 0.5, 0.5), mgp=c(0, 0.6, 0), oma=c(0.1, 0.1, 0.1, 0.1))
for (i in 1:length(name)) {
    win <- winweights(w, type=name[i], step.adj=FALSE, lev.adj="sum", a=3)
    rol <- rollconv(x, win, partial=FALSE, scale.window=FALSE)
    spectrum(na.omit(rol), main="", xlab="", ylab="", sub="", lwd=0.1, ylim=c(1e-16, 1))
    grid(col="#00000022", lty=1)
    legend("topright", legend=name[i], bty="n", text.col="blue", adj=c(0.2, 0))
}

}
